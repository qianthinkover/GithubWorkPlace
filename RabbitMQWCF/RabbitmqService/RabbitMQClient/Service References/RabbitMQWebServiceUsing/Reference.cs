//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RabbitMQClient.RabbitMQWebServiceUsing {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RabbitMQBizInfo", Namespace="http://schemas.datacontract.org/2004/07/RabbitMQCommon.RabbitMQEntities")]
    [System.SerializableAttribute()]
    public partial class RabbitMQBizInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BizDescribeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BizKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BizDescribe {
            get {
                return this.BizDescribeField;
            }
            set {
                if ((object.ReferenceEquals(this.BizDescribeField, value) != true)) {
                    this.BizDescribeField = value;
                    this.RaisePropertyChanged("BizDescribe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BizKey {
            get {
                return this.BizKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.BizKeyField, value) != true)) {
                    this.BizKeyField = value;
                    this.RaisePropertyChanged("BizKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RabbitMQWebServiceUsing.IRabbitMQService")]
    public interface IRabbitMQService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRabbitMQService/PublishRabbitMQMsg", ReplyAction="http://tempuri.org/IRabbitMQService/PublishRabbitMQMsgResponse")]
        void PublishRabbitMQMsg(RabbitMQClient.RabbitMQWebServiceUsing.RabbitMQBizInfo BizKey, string MsgBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRabbitMQService/PublishRabbitMQMsg", ReplyAction="http://tempuri.org/IRabbitMQService/PublishRabbitMQMsgResponse")]
        System.Threading.Tasks.Task PublishRabbitMQMsgAsync(RabbitMQClient.RabbitMQWebServiceUsing.RabbitMQBizInfo BizKey, string MsgBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRabbitMQService/ReceieveRabbitMQMsg", ReplyAction="http://tempuri.org/IRabbitMQService/ReceieveRabbitMQMsgResponse")]
        string ReceieveRabbitMQMsg(RabbitMQClient.RabbitMQWebServiceUsing.RabbitMQBizInfo BizKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRabbitMQService/ReceieveRabbitMQMsg", ReplyAction="http://tempuri.org/IRabbitMQService/ReceieveRabbitMQMsgResponse")]
        System.Threading.Tasks.Task<string> ReceieveRabbitMQMsgAsync(RabbitMQClient.RabbitMQWebServiceUsing.RabbitMQBizInfo BizKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRabbitMQServiceChannel : RabbitMQClient.RabbitMQWebServiceUsing.IRabbitMQService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RabbitMQServiceClient : System.ServiceModel.ClientBase<RabbitMQClient.RabbitMQWebServiceUsing.IRabbitMQService>, RabbitMQClient.RabbitMQWebServiceUsing.IRabbitMQService {
        
        public RabbitMQServiceClient() {
        }
        
        public RabbitMQServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RabbitMQServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RabbitMQServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RabbitMQServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PublishRabbitMQMsg(RabbitMQClient.RabbitMQWebServiceUsing.RabbitMQBizInfo BizKey, string MsgBody) {
            base.Channel.PublishRabbitMQMsg(BizKey, MsgBody);
        }
        
        public System.Threading.Tasks.Task PublishRabbitMQMsgAsync(RabbitMQClient.RabbitMQWebServiceUsing.RabbitMQBizInfo BizKey, string MsgBody) {
            return base.Channel.PublishRabbitMQMsgAsync(BizKey, MsgBody);
        }
        
        public string ReceieveRabbitMQMsg(RabbitMQClient.RabbitMQWebServiceUsing.RabbitMQBizInfo BizKey) {
            return base.Channel.ReceieveRabbitMQMsg(BizKey);
        }
        
        public System.Threading.Tasks.Task<string> ReceieveRabbitMQMsgAsync(RabbitMQClient.RabbitMQWebServiceUsing.RabbitMQBizInfo BizKey) {
            return base.Channel.ReceieveRabbitMQMsgAsync(BizKey);
        }
    }
}
